[
  {
    "objectID": "Homework3.html",
    "href": "Homework3.html",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nThe relative path would be ../MyData.csv.\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects easily interface with github to provide version control, but allows for working within a common local file structure that enables specying relative paths to facilitate sharing code. This makes it easy to work on your project and collaborate with others.\n\n\nWhat is git and what is github?\n\n\nGit is a version control software and github is an online hosting service for git-based projects\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nA tibble allows for a broader range of unusual characters (such as parentheses) in column names. It also prints a cleaner view of the layout, which includes specifying the data type for each column and only presenting the first ~10 rows to avoid cluttering up the console.\n\n\nRewrite the following nested function call using baseR’s chaining operator:\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\nRewritten code shown below:\nas_tibble(iris) |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\n\nLong format means each observation is on a different row. In wide formate, repeated observations for the same cases are listed in different columns in the same row. Long format is generally preferred for statistical analysis."
  },
  {
    "objectID": "Homework3.html#task-1-conceptual-questions",
    "href": "Homework3.html#task-1-conceptual-questions",
    "title": "Homework 3",
    "section": "",
    "text": "If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n\nThe relative path would be ../MyData.csv.\n\n\nWhat are the major benefits of using R projects?\n\n\nR projects easily interface with github to provide version control, but allows for working within a common local file structure that enables specying relative paths to facilitate sharing code. This makes it easy to work on your project and collaborate with others.\n\n\nWhat is git and what is github?\n\n\nGit is a version control software and github is an online hosting service for git-based projects\n\n\nWhat are the two main differences between a tibble and a data.frame?\n\n\nA tibble allows for a broader range of unusual characters (such as parentheses) in column names. It also prints a cleaner view of the layout, which includes specifying the data type for each column and only presenting the first ~10 rows to avoid cluttering up the console.\n\n\nRewrite the following nested function call using baseR’s chaining operator:\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\nRewritten code shown below:\nas_tibble(iris) |&gt; select(starts_with(“Petal”), Species) |&gt; filter(Petal.Length &lt; 1.55) |&gt; arrange(Species)\n\n\nWhat is meant by long format data and wide format data? Which do we generally prefer for statistical analysis?\n\n\nLong format means each observation is on a different row. In wide formate, repeated observations for the same cases are listed in different columns in the same row. Long format is generally preferred for statistical analysis."
  },
  {
    "objectID": "Homework3.html#task-2-reading-delimited-data",
    "href": "Homework3.html#task-2-reading-delimited-data",
    "title": "Homework 3",
    "section": "Task 2: Reading Delimited Data",
    "text": "Task 2: Reading Delimited Data\n\nGlass Data\n\nRead data from glass.data directly into R, add column names, and print out the tibble.\n\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.2.3\n\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tibble' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'purrr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\nWarning: package 'stringr' was built under R version 4.2.3\n\n\nWarning: package 'forcats' was built under R version 4.2.3\n\n\nWarning: package 'lubridate' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nglass_tbl &lt;- read_csv(\"../R Scripts/R Course/glass.data\", \n         col_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \n                       \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\"))\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, Type_of_glass\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(glass_tbl)\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n\nOverwrite Type of Glass using mutate() to create a character string version.\n\n\nglass_tbl |&gt;\n  mutate(Type_of_glass = if_else(Type_of_glass==1, \"build_wind_flt_proc\", \n                  if_else(Type_of_glass==2, \"build_wind_non_flt_proc\", \n                  if_else(Type_of_glass==3, \"veh_wind_flt_proc\",\n                  if_else(Type_of_glass==4, \"veh_wind_non_flt_proc\",\n                  if_else(Type_of_glass==5, \"containers\",\n                  if_else(Type_of_glass==6, \"tableware\", \n                  if_else(Type_of_glass==7, \"headlamp\", \"other\"))))))))\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    build_wind_flt_p…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    build_wind_flt_p…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    build_wind_flt_p…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    build_wind_flt_p…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    build_wind_flt_p…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 build_wind_flt_p…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    build_wind_flt_p…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    build_wind_flt_p…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    build_wind_flt_p…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 build_wind_flt_p…\n# ℹ 204 more rows\n\n\n\nKeep only observations where Fe &lt; 0.2 and Type of Glass is “tableware” or “headlamp”.\n\n\nglass_tbl |&gt;\n  mutate(Type_of_glass = if_else(Type_of_glass==1, \"build_wind_flt_proc\", \n                  if_else(Type_of_glass==2, \"build_wind_non_flt_proc\", \n                  if_else(Type_of_glass==3, \"veh_wind_flt_proc\",\n                  if_else(Type_of_glass==4, \"veh_wind_non_flt_proc\",\n                  if_else(Type_of_glass==5, \"containers\",\n                  if_else(Type_of_glass==6, \"tableware\", \n                  if_else(Type_of_glass==7, \"headlamp\", \"other\")))))))) |&gt;\n  filter(Fe &lt; 0.2, Type_of_glass == c(\"tableware\", \"headlamp\"))\n\n# A tibble: 20 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0     0    tableware    \n 2   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0     0    tableware    \n 3   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0     0    tableware    \n 4   183  1.52  14.2  0     2.09  72.7  0    10.9   0     0    tableware    \n 5   185  1.51  17.4  0     0.34  75.4  0     6.65  0     0    tableware    \n 6   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19  0    headlamp     \n 7   188  1.52  13.4  3.34  1.23  72.4  0.6   8.83  0     0    headlamp     \n 8   190  1.52  15.8  1.83  1.31  70.4  0.31  8.61  1.68  0    headlamp     \n 9   192  1.52  14.8  0     2.38  73.3  0     8.76  0.64  0.09 headlamp     \n10   194  1.52  14.8  0     2     73.0  0     8.53  1.59  0.08 headlamp     \n11   196  1.52  14.1  0     2.68  73.4  0.08  9.07  0.61  0.05 headlamp     \n12   198  1.52  14.7  0     2.34  73.3  0     8.95  0.66  0    headlamp     \n13   200  1.52  15.0  0     2.51  73.0  0.05  8.83  0.53  0    headlamp     \n14   202  1.52  12.0  0     1.19  75.2  2.7   8.93  0     0    headlamp     \n15   204  1.52  14.8  0     1.99  73.1  0     8.28  1.71  0    headlamp     \n16   206  1.52  15.0  0     1.8   73.0  0     8.61  1.55  0    headlamp     \n17   208  1.52  14.4  0     1.82  72.9  1.41  6.47  2.88  0    headlamp     \n18   210  1.52  14.1  0     2.88  72.6  0.08  9.18  1.06  0    headlamp     \n19   212  1.52  14.4  0     2.02  73.4  0     8.44  1.64  0    headlamp     \n20   214  1.52  14.2  0     2.08  73.4  0     8.62  1.67  0    headlamp     \n\n\n\n\nYeast Data\n\nRead data from glass.data directly into R, add column names, and print out the tibble.\n\n\nyeast_tbl &lt;- read_fwf(\"../R Scripts/R Course/yeast.data\",\n         fwf_widths(c(12, 6, 6, 6, 6, 6, 6, 6, 6, 3),\n                    c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\",\n                      \"pox\", \"vac\", \"nuc\", \"class\")))\n\nRows: 1484 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\n\nchr (2): seq_name, class\ndbl (8): mcg, gvh, alm, mit, erl, pox, vac, nuc\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(yeast_tbl)\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\nRemove seq_name and nuc columns\n\n\nyeast_tbl |&gt;\n  select(-seq_name, -nuc)\n\n# A tibble: 1,484 × 8\n     mcg   gvh   alm   mit   erl   pox   vac class\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT  \n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT  \n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT  \n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC  \n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT  \n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT  \n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT  \n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC  \n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT  \n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT  \n# ℹ 1,474 more rows\n\n\n\nAdd columns for mean and median for each numeric value at each class grouping.\n\n\nyeast_tbl |&gt;\n  select(-seq_name, -nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), list(mean = mean, median = median),\n                .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "Homework3.html#task-2-combining-excel-and-delimited-data",
    "href": "Homework3.html#task-2-combining-excel-and-delimited-data",
    "title": "Homework 3",
    "section": "Task 2: Combining Excel and Delimited Data",
    "text": "Task 2: Combining Excel and Delimited Data\n\nImport white wine excel data.\n\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.2.3\n\nwhite_tbl &lt;- read_excel(\"../R Scripts/R Course/white-wine.xlsx\")\nwhite_tbl\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nImport alternate variable names and overwrite existing names.\n\n\nwine_names &lt;- read_excel(\"../R Scripts/R Course/white-wine.xlsx\", \n      sheet = excel_sheets(\"../R Scripts/R Course/white-wine.xlsx\")[2])\n\ncolnames(white_tbl) &lt;- wine_names$Variables\nwhite_tbl\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nAdd a column to indicate these wines are white.\n\n\nwhite_tbl &lt;- white_tbl |&gt;\n  mutate(type = \"white\")\n\n\nRead in red-wine.csv, replace variable names, and indicate type as “red”.\n\n\nred_tbl &lt;- read_delim(\"../R Scripts/R Course/red-wine.csv\",\n                      delim = \";\")\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nred_tbl\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1             7.4               0.7           0                 1.9     0.076\n 2             7.8               0.88          0                 2.6     0.098\n 3             7.8               0.76          0.04              2.3     0.092\n 4            11.2               0.28          0.56              1.9     0.075\n 5             7.4               0.7           0                 1.9     0.076\n 6             7.4               0.66          0                 1.8     0.075\n 7             7.9               0.6           0.06              1.6     0.069\n 8             7.3               0.65          0                 1.2     0.065\n 9             7.8               0.58          0.02              2       0.073\n10             7.5               0.5           0.36              6.1     0.071\n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\ncolnames(red_tbl) &lt;- wine_names$Variables\n\nred_tbl &lt;- red_tbl |&gt;\n  mutate(type = \"red\")\n\n\nCombine the two datasets into one.\n\n\nwine_tbl &lt;- dplyr::bind_rows(red_tbl, white_tbl)\nwine_tbl\n\n# A tibble: 6,497 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.4             0.7         0               1.9     0.076\n 2           7.8             0.88        0               2.6     0.098\n 3           7.8             0.76        0.04            2.3     0.092\n 4          11.2             0.28        0.56            1.9     0.075\n 5           7.4             0.7         0               1.9     0.076\n 6           7.4             0.66        0               1.8     0.075\n 7           7.9             0.6         0.06            1.6     0.069\n 8           7.3             0.65        0               1.2     0.065\n 9           7.8             0.58        0.02            2       0.073\n10           7.5             0.5         0.36            6.1     0.071\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nFilter to only look at quality &gt; 6.5 and alcohol &lt; 13.2.\n\n\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 13.2)\n\n# A tibble: 365 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.3            0.65         0               1.2     0.065\n 2           7.8            0.58         0.02            2       0.073\n 3           8.5            0.28         0.56            1.8     0.092\n 4           8.1            0.38         0.28            2.1     0.066\n 5           7.5            0.52         0.16            1.9     0.085\n 6           8              0.59         0.16            1.8     0.065\n 7           5.4            0.835        0.08            1.2     0.046\n 8           9.6            0.32         0.47            1.4     0.056\n 9          12.8            0.3          0.74            2.6     0.095\n10          12.8            0.3          0.74            2.6     0.095\n# ℹ 355 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSort data from highest quality to lowest\n\n\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 13.2) |&gt;\n  arrange(desc(quality))\n\n# A tibble: 365 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1           7.9             0.35        0.46            3.6     0.078\n 2          10.3             0.32        0.45            6.4     0.073\n 3           5.6             0.85        0.05            1.4     0.045\n 4          12.6             0.31        0.72            2.2     0.072\n 5           9.4             0.3         0.56            2.8     0.08 \n 6          10.7             0.35        0.53            2.6     0.07 \n 7          10.7             0.35        0.53            2.6     0.07 \n 8           7.8             0.57        0.09            2.3     0.065\n 9           9.1             0.4         0.5             1.8     0.071\n10          10               0.26        0.54            1.9     0.083\n# ℹ 355 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type &lt;chr&gt;\n\n\n\nSelect only variables containing acid, alcohol, type, and quality\n\n\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 13.2) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), \"alcohol\", \"type\", \"quality\")\n\n# A tibble: 365 × 6\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1           7.9             0.35        0.46    12.8 red         8\n 2          10.3             0.32        0.45    12.6 red         8\n 3           5.6             0.85        0.05    12.9 red         8\n 4          12.6             0.31        0.72     9.8 red         8\n 5           9.4             0.3         0.56    11.7 red         8\n 6          10.7             0.35        0.53    11   red         8\n 7          10.7             0.35        0.53    11   red         8\n 8           7.8             0.57        0.09    12.7 red         8\n 9           9.1             0.4         0.5     12.5 red         8\n10          10               0.26        0.54    11.8 red         8\n# ℹ 355 more rows\n\n\n\nAdd mean and sd of alcohol for each setting of quality\n\n\nwine_tbl |&gt;\n  filter(quality &gt; 6.5, alcohol &lt; 13.2) |&gt;\n  arrange(desc(quality)) |&gt;\n  select(contains(\"acid\"), \"alcohol\", \"type\", \"quality\") |&gt;\n  group_by(quality) |&gt;\n  mutate(alcohol_mean = mean(alcohol),\n         alcohol_sd = sd(alcohol))\n\n# A tibble: 365 × 8\n# Groups:   quality [2]\n   fixed_acidity volatile_acidity citric_acid alcohol type  quality alcohol_mean\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;        &lt;dbl&gt;\n 1           7.9             0.35        0.46    12.8 red         8         11.9\n 2          10.3             0.32        0.45    12.6 red         8         11.9\n 3           5.6             0.85        0.05    12.9 red         8         11.9\n 4          12.6             0.31        0.72     9.8 red         8         11.9\n 5           9.4             0.3         0.56    11.7 red         8         11.9\n 6          10.7             0.35        0.53    11   red         8         11.9\n 7          10.7             0.35        0.53    11   red         8         11.9\n 8           7.8             0.57        0.09    12.7 red         8         11.9\n 9           9.1             0.4         0.5     12.5 red         8         11.9\n10          10               0.26        0.54    11.8 red         8         11.9\n# ℹ 355 more rows\n# ℹ 1 more variable: alcohol_sd &lt;dbl&gt;"
  },
  {
    "objectID": "Homework3.html#database-practice",
    "href": "Homework3.html#database-practice",
    "title": "Homework 3",
    "section": "Database Practice",
    "text": "Database Practice\nConnect to the Lahman database and look at the tables\n\nlibrary(DBI)\ncon &lt;- dbConnect(RSQLite::SQLite(), \"../R Scripts/R Course/lahman.db\")\ndbListTables(con)\n\n [1] \"AllstarFull\"         \"Appearances\"         \"AwardsManagers\"     \n [4] \"AwardsPlayers\"       \"AwardsShareManagers\" \"AwardsSharePlayers\" \n [7] \"Batting\"             \"BattingPost\"         \"CollegePlaying\"     \n[10] \"Fielding\"            \"FieldingOF\"          \"FieldingOFsplit\"    \n[13] \"FieldingPost\"        \"HallOfFame\"          \"HomeGames\"          \n[16] \"LahmanData\"          \"Managers\"            \"ManagersHalf\"       \n[19] \"Parks\"               \"People\"              \"Pitching\"           \n[22] \"PitchingPost\"        \"Salaries\"            \"Schools\"            \n[25] \"SeriesPost\"          \"Teams\"               \"TeamsFranchises\"    \n[28] \"TeamsHalf\"           \"battingLabels\"       \"fieldingLabels\"     \n[31] \"pitchingLabels\"     \n\n\n\nReturn data from the Teams table for 2015.\n\n\ntbl(con, \"Teams\") |&gt;\n  filter(yearID ==2015)\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.45.2 [C:\\Users\\ms524\\Documents\\R Scripts\\R Course\\lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n\nRepeat above using SQL code\n\n\ntbl(con, sql(\n  \"SELECT *\n  FROM `Teams`\n  WHERE (`yearID` = 2015)\"\n))\n\n# Source:   SQL [?? x 48]\n# Database: sqlite 3.45.2 [C:\\Users\\ms524\\Documents\\R Scripts\\R Course\\lahman.db]\n   yearID lgID  teamID franchID divID  Rank     G Ghome     W     L DivWin WCWin\n    &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;  &lt;chr&gt;\n 1   2015 NL    ARI    ARI      W         3   162    81    79    83 N      N    \n 2   2015 NL    ATL    ATL      E         4   162    81    67    95 N      N    \n 3   2015 AL    BAL    BAL      E         3   162    78    81    81 N      N    \n 4   2015 AL    BOS    BOS      E         5   162    81    78    84 N      N    \n 5   2015 AL    CHA    CHW      C         4   162    81    76    86 N      N    \n 6   2015 NL    CHN    CHC      C         3   162    81    97    65 N      Y    \n 7   2015 NL    CIN    CIN      C         5   162    81    64    98 N      N    \n 8   2015 AL    CLE    CLE      C         3   161    80    81    80 N      N    \n 9   2015 NL    COL    COL      W         5   162    81    68    94 N      N    \n10   2015 AL    DET    DET      C         5   161    81    74    87 N      N    \n# ℹ more rows\n# ℹ 36 more variables: LgWin &lt;chr&gt;, WSWin &lt;chr&gt;, R &lt;int&gt;, AB &lt;int&gt;, H &lt;int&gt;,\n#   X2B &lt;int&gt;, X3B &lt;int&gt;, HR &lt;int&gt;, BB &lt;int&gt;, SO &lt;int&gt;, SB &lt;int&gt;, CS &lt;int&gt;,\n#   HBP &lt;int&gt;, SF &lt;int&gt;, RA &lt;int&gt;, ER &lt;int&gt;, ERA &lt;dbl&gt;, CG &lt;int&gt;, SHO &lt;int&gt;,\n#   SV &lt;int&gt;, IPouts &lt;int&gt;, HA &lt;int&gt;, HRA &lt;int&gt;, BBA &lt;int&gt;, SOA &lt;int&gt;, E &lt;int&gt;,\n#   DP &lt;int&gt;, FP &lt;dbl&gt;, name &lt;chr&gt;, park &lt;chr&gt;, attendance &lt;int&gt;, BPF &lt;int&gt;,\n#   PPF &lt;int&gt;, teamIDBR &lt;chr&gt;, teamIDlahman45 &lt;chr&gt;, teamIDretro &lt;chr&gt;\n\n\n\nReturn all players in the hall of fame, year voted in, and category.\n\n\ntbl(con, \"HallofFame\") |&gt;\n  filter(inducted ==\"Y\") |&gt;\n  select(\"playerID\", \"yearID\", \"category\")\n\n# Source:   SQL [?? x 3]\n# Database: sqlite 3.45.2 [C:\\Users\\ms524\\Documents\\R Scripts\\R Course\\lahman.db]\n   playerID  yearID category         \n   &lt;chr&gt;      &lt;int&gt; &lt;chr&gt;            \n 1 cobbty01    1936 Player           \n 2 ruthba01    1936 Player           \n 3 wagneho01   1936 Player           \n 4 mathech01   1936 Player           \n 5 johnswa01   1936 Player           \n 6 lajoina01   1937 Player           \n 7 speaktr01   1937 Player           \n 8 youngcy01   1937 Player           \n 9 bulkemo99   1937 Pioneer/Executive\n10 johnsba99   1937 Pioneer/Executive\n# ℹ more rows\n\n\n\nCombine with People table to add nameFirst and nameLast\n\n\ntbl(con, \"People\")\n\n# Source:   table&lt;`People`&gt; [?? x 26]\n# Database: sqlite 3.45.2 [C:\\Users\\ms524\\Documents\\R Scripts\\R Course\\lahman.db]\n   playerID  birthYear birthMonth birthDay birthCountry birthState birthCity   \n   &lt;chr&gt;         &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;       \n 1 aardsda01      1981         12       27 USA          CO         Denver      \n 2 aaronha01      1934          2        5 USA          AL         Mobile      \n 3 aaronto01      1939          8        5 USA          AL         Mobile      \n 4 aasedo01       1954          9        8 USA          CA         Orange      \n 5 abadan01       1972          8       25 USA          FL         Palm Beach  \n 6 abadfe01       1985         12       17 D.R.         La Romana  La Romana   \n 7 abadijo01      1850         11        4 USA          PA         Philadelphia\n 8 abbated01      1877          4       15 USA          PA         Latrobe     \n 9 abbeybe01      1869         11       11 USA          VT         Essex       \n10 abbeych01      1866         10       14 USA          NE         Falls City  \n# ℹ more rows\n# ℹ 19 more variables: deathYear &lt;int&gt;, deathMonth &lt;int&gt;, deathDay &lt;int&gt;,\n#   deathCountry &lt;chr&gt;, deathState &lt;chr&gt;, deathCity &lt;chr&gt;, nameFirst &lt;chr&gt;,\n#   nameLast &lt;chr&gt;, nameGiven &lt;chr&gt;, weight &lt;int&gt;, height &lt;int&gt;, bats &lt;chr&gt;,\n#   throws &lt;chr&gt;, debut &lt;chr&gt;, finalGame &lt;chr&gt;, retroID &lt;chr&gt;, bbrefID &lt;chr&gt;,\n#   deathDate &lt;dbl&gt;, birthDate &lt;dbl&gt;\n\nfame_tbl &lt;- left_join(tbl(con, \"HallofFame\") |&gt;\n  filter(inducted ==\"Y\") |&gt;\n  select(\"playerID\", \"yearID\", \"category\"), \n  tbl(con, \"People\") |&gt;\n    select(\"playerID\", \"nameFirst\", \"nameLast\"),\n  by = join_by(playerID == playerID)) |&gt;\n  collect()\n\n\nReturn playerID, G, W, and L from Managers and determine overall win/loss records for each manager. Calculate variable for percent of games won out of total games played, and sort by this variable from largest to smallest.\n\n\nmanagers_tbl &lt;- tbl(con, \"Managers\") |&gt;\n  select(\"playerID\", \"G\", \"W\", \"L\") |&gt;\n  group_by(playerID) |&gt;\n  summarize(G_managed = sum(G, na.rm = TRUE),\n            Total_W = sum(W, na.rm = TRUE),\n            Total_L = sum(L, na.rm = TRUE)) |&gt;\n  collect() |&gt;\n  mutate(Percent_W = Total_W/G_managed) |&gt;\n  arrange(desc(Percent_W)) |&gt;\n  collect()\n\n\nReturn information for only those peole who managed a team and were inducted into the hall of fame.\n\n\ninner_join(managers_tbl, fame_tbl,\n    by = join_by(playerID == playerID))\n\n# A tibble: 97 × 9\n   playerID  G_managed Total_W Total_L Percent_W yearID category       nameFirst\n   &lt;chr&gt;         &lt;int&gt;   &lt;int&gt;   &lt;int&gt;     &lt;dbl&gt;  &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;    \n 1 simmote01         1       1       0     1       2020 Player         Ted      \n 2 wrighge01        85      59      25     0.694   1937 Pioneer/Execu… George   \n 3 spaldal01       126      78      47     0.619   1939 Pioneer/Execu… Al       \n 4 mccarjo99      3487    2125    1333     0.609   1957 Manager        Joe      \n 5 comisch01      1410     840     541     0.596   1939 Pioneer/Execu… Charlie  \n 6 southbi01      1770    1044     704     0.590   2008 Manager        Billy    \n 7 seleefr99      2180    1284     862     0.589   1999 Manager        Frank    \n 8 chancfr01      1622     946     648     0.583   1946 Player         Frank    \n 9 weaveea99      2541    1480    1060     0.582   1996 Manager        Earl     \n10 lopezal01      2425    1410    1004     0.581   1977 Manager        Al       \n# ℹ 87 more rows\n# ℹ 1 more variable: nameLast &lt;chr&gt;"
  }
]